{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.particleContainer = exports.debugContainer = exports.rootContainer = void 0;\n\nvar settings_1 = require(\"./settings\");\n\nvar util_1 = require(\"./util\");\n/**\r\n * The prefix to apply to the containers.\r\n */\n\n\nvar containerPrefix = \"party-js-\";\n/**\r\n * Checks if the specified container is 'active', meaning not undefined and attached to the DOM.\r\n */\n\nfunction isContainerActive(container) {\n  return container && container.isConnected;\n}\n/**\r\n * A generic factory method for creating a DOM container. Prefixes the specified name with the\r\n * container prefix, applies the styles and adds it under the parent.\r\n */\n\n\nfunction makeContainer(name, styles, parent) {\n  var container = document.createElement(\"div\");\n  container.id = containerPrefix + name;\n  Object.assign(container.style, styles);\n  return parent.appendChild(container);\n}\n/**\r\n * Represents the root container for DOM elements of the library.\r\n */\n\n\nexports.rootContainer = new util_1.Lazy(function () {\n  return makeContainer(\"container\", {\n    position: \"fixed\",\n    left: \"0\",\n    top: \"0\",\n    height: \"100vh\",\n    width: \"100vw\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    zIndex: settings_1.settings.zIndex.toString()\n  }, document.body);\n}, isContainerActive);\n/**\r\n * Represents the debugging container of the library, only active if debugging is enabled.\r\n */\n\nexports.debugContainer = new util_1.Lazy(function () {\n  return makeContainer(\"debug\", {\n    position: \"absolute\",\n    top: \"0\",\n    left: \"0\",\n    margin: \"0.5em\",\n    padding: \"0.5em 1em\",\n    border: \"2px solid rgb(0, 0, 0, 0.2)\",\n    background: \"rgb(0, 0, 0, 0.1)\",\n    color: \"#555\",\n    fontFamily: \"monospace\"\n  }, exports.rootContainer.current);\n}, isContainerActive);\n/**\r\n * Represents the particle container of the library.\r\n * This is where the particle DOM elements get rendered into.\r\n */\n\nexports.particleContainer = new util_1.Lazy(function () {\n  return makeContainer(\"particles\", {\n    width: \"100%\",\n    height: \"100%\",\n    overflow: \"hidden\",\n    perspective: \"1200px\"\n  }, exports.rootContainer.current);\n}, isContainerActive);","map":null,"metadata":{},"sourceType":"script"}
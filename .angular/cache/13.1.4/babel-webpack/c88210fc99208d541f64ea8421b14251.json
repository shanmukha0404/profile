{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NumericSpline = void 0;\n\nvar math_1 = require(\"../systems/math\");\n\nvar spline_1 = require(\"./spline\");\n/**\r\n * Represents a spline that can take numeric values.\r\n */\n\n\nvar NumericSpline =\n/** @class */\nfunction (_super) {\n  __extends(NumericSpline, _super);\n\n  function NumericSpline() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * Smoothly interpolates between two keys on the spline.\r\n   */\n\n\n  NumericSpline.prototype.interpolate = function (a, b, t) {\n    return math_1.slerp(a, b, t);\n  };\n\n  return NumericSpline;\n}(spline_1.Spline);\n\nexports.NumericSpline = NumericSpline;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveShapeFactory = exports.resolvableShapes = void 0;\n\nvar variation_1 = require(\"./variation\");\n/**\r\n * Represents the lookup that maps resolveable element keys to their HTML strings.\r\n *\r\n * @remarks\r\n * The default shapes are made to fit inside a dimension of 10x10 pixels, except\r\n * the 'star' shape, which exceeds it slightly.\r\n */\n\n\nexports.resolvableShapes = {\n  square: \"<div style=\\\"height: 10px; width: 10px;\\\"></div>\",\n  rectangle: \"<div style=\\\"height: 6px; width: 10px;\\\"></div>\",\n  circle: \"<svg viewBox=\\\"0 0 2 2\\\" width=\\\"10\\\" height=\\\"10\\\"><circle cx=\\\"1\\\" cy=\\\"1\\\" r=\\\"1\\\" fill=\\\"currentColor\\\"/></svg>\",\n  roundedSquare: \"<div style=\\\"height: 10px; width: 10px; border-radius: 3px;\\\"></div>\",\n  roundedRectangle: \"<div style=\\\"height: 6px; width: 10px; border-radius: 3px;\\\"></div>\",\n  star: \"<svg viewBox=\\\"0 0 512 512\\\" width=\\\"15\\\" height=\\\"15\\\"><polygon fill=\\\"currentColor\\\" points=\\\"512,197.816 325.961,185.585 255.898,9.569 185.835,185.585 0,197.816 142.534,318.842 95.762,502.431 255.898,401.21 416.035,502.431 369.263,318.842\\\"/></svg>\"\n};\n/**\r\n * Resolves the specified element factory using the resolvable elements, if needed.\r\n */\n\nfunction resolveShapeFactory(factory) {\n  // Retrieve the unresolved element from the factory.\n  var shape = variation_1.evaluateVariation(factory); // If a string is returned, we need to resolve the element. This means\n  // looking up the string in the resolver lookup. If the key was not\n  // resolvable, we throw an error.\n\n  if (typeof shape === \"string\") {\n    var resolved = exports.resolvableShapes[shape];\n\n    if (!resolved) {\n      throw new Error(\"Failed to resolve shape key '\" + shape + \"'. Did you forget to add it to the 'resolvableShapes' lookup?\");\n    } // We're in luck, we can resolve the element! We create a dummy <div> element\n    // to set the innerHTML of, and return the first element child.\n\n\n    var dummy = document.createElement(\"div\");\n    dummy.innerHTML = resolved;\n    return dummy.firstElementChild;\n  }\n\n  return shape;\n}\n\nexports.resolveShapeFactory = resolveShapeFactory;","map":null,"metadata":{},"sourceType":"script"}
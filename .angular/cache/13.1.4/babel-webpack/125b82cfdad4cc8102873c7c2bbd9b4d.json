{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.confetti = void 0;\n\nvar __1 = require(\"../\");\n\nvar components_1 = require(\"../components\");\n\nvar modules_1 = require(\"../systems/modules\");\n\nvar random = require(\"../systems/random\");\n\nvar sources = require(\"../systems/sources\");\n\nvar variation = require(\"../systems/variation\");\n\nvar util = require(\"../util\");\n/**\r\n * The standard confetti template.\r\n *\r\n * @param source The source to emit the confetti from.\r\n * @param options The (optional) configuration overrides.\r\n */\n\n\nfunction confetti(source, options) {\n  var populated = util.overrideDefaults({\n    count: variation.range(20, 40),\n    spread: variation.range(35, 45),\n    speed: variation.range(300, 600),\n    size: variation.skew(1, 0.2),\n    rotation: function () {\n      return random.randomUnitVector().scale(180);\n    },\n    color: function () {\n      return components_1.Color.fromHsl(random.randomRange(0, 360), 100, 70);\n    },\n    modules: [new modules_1.ModuleBuilder().drive(\"size\").by(function (t) {\n      return Math.min(1, t * 3);\n    }).relative().build(), new modules_1.ModuleBuilder().drive(\"rotation\").by(function (t) {\n      return new components_1.Vector(140, 200, 260).scale(t);\n    }).relative().build()],\n    shapes: [\"square\", \"circle\"]\n  }, options);\n\n  var emitter = __1.scene.current.createEmitter({\n    emitterOptions: {\n      loops: 1,\n      duration: 8,\n      modules: populated.modules\n    },\n    emissionOptions: {\n      rate: 0,\n      bursts: [{\n        time: 0,\n        count: populated.count\n      }],\n      sourceSampler: sources.dynamicSource(source),\n      angle: variation.skew(-90, variation.evaluateVariation(populated.spread)),\n      initialLifetime: 8,\n      initialSpeed: populated.speed,\n      initialSize: populated.size,\n      initialRotation: populated.rotation,\n      initialColor: populated.color\n    },\n    rendererOptions: {\n      shapeFactory: populated.shapes\n    }\n  });\n\n  return emitter;\n}\n\nexports.confetti = confetti;","map":null,"metadata":{},"sourceType":"script"}
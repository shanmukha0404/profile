{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gradientSample = exports.splineSample = exports.skewRelative = exports.skew = exports.range = exports.evaluateVariation = void 0;\n\nvar random_1 = require(\"./random\");\n/**\r\n * Returns a value instance of a variation.\r\n */\n\n\nfunction evaluateVariation(variation) {\n  if (Array.isArray(variation)) return random_1.pick(variation);\n  if (typeof variation === \"function\") return variation();\n  return variation;\n}\n\nexports.evaluateVariation = evaluateVariation;\n/**\r\n * Creates a variation function that returns a random number from min to max.\r\n */\n\nfunction range(min, max) {\n  return function () {\n    return random_1.randomRange(min, max);\n  };\n}\n\nexports.range = range;\n/**\r\n * Creates a variation function that skews the specified value by a specified, absolute\r\n * amount. This means that instead of the value itself, a random number that deviates\r\n * at most by the specified amount is returned.\r\n *\r\n * @remarks\r\n * If you want to skew by a percentage instead, use `skewRelative`.\r\n */\n\nfunction skew(value, amount) {\n  return function () {\n    return value + random_1.randomRange(-amount, amount);\n  };\n}\n\nexports.skew = skew;\n/**\r\n * Creates a variation function that skews the specified value by a specified percentage.\r\n * This means that instead of the value itself, a random number that deviates by a maximum\r\n * of the specified percentage is returned.\r\n */\n\nfunction skewRelative(value, percentage) {\n  return function () {\n    return value * (1 + random_1.randomRange(-percentage, percentage));\n  };\n}\n\nexports.skewRelative = skewRelative;\n/**\r\n * Creates a variation function that returns a random sample from the given spline.\r\n *\r\n * @param spline The spline to sample from.\r\n */\n\nfunction splineSample(spline) {\n  return function () {\n    return spline.evaluate(Math.random());\n  };\n}\n\nexports.splineSample = splineSample;\n/**\r\n * Creates a variation function that returns a random sample from the given gradient.\r\n *\r\n * @remarks\r\n * This function is an alias for the spline variation, since a gradient is just\r\n * a spline under the hood.\r\n *\r\n * @param gradient The gradient to sample from.\r\n */\n\nfunction gradientSample(gradient) {\n  return splineSample(gradient);\n}\n\nexports.gradientSample = gradientSample;","map":null,"metadata":{},"sourceType":"script"}